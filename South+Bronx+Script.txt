local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")
local MarketplaceService = game:GetService("MarketplaceService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
 
--// GUI Library (Kavo UI)
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("South Bronx GUI", "DarkTheme")
 
--------------------------------------------------
-- Tabs and Sections
--------------------------------------------------
local ESP_Tab = Window:NewTab("ESP")
local ESPSection = ESP_Tab:NewSection("ESP Settings")
 
local Aim_Tab = Window:NewTab("Aim")
local AimSection = Aim_Tab:NewSection("Aim Settings")
 
local Security = Window:NewTab("Security")
local SecuritySection = Security:NewSection("Security Settings")
 
local AboutMe = Window:NewTab("About Me")
local AboutSection = AboutMe:NewSection("Player Info")
 
--------------------------------------------------
-- Variables for ESP and Aimbot
--------------------------------------------------
local BoxESPEnabled = false
local SkeletonESPEnabled = false
local ESPColor = Color3.new(1, 1, 1)
 
local AimbotEnabled = false
local TeamCheck = false
local AimPart = "Head"
local Sensitivity = 0.1
local FOV_Radius = 100
local FOV_Visible = false
local FOV_Color = Color3.fromRGB(255, 255, 255)
 
local Holding = false  -- لتتبع ضغط زر الماوس
 
-- Aim Safe: قائمة بأسماء اللاعبين (يتم اختيارهم من Dropdown)
local safePlayers = {}
 
--------------------------------------------------
-- Speed Limit Variables (Security)
--------------------------------------------------
local MapSpeedLimit = 200  -- قيمة افتراضية، سيتم تحديثها عند الكشف
local LockSpeedEnabled = false
 
--------------------------------------------------
-- God Mode Variable
--------------------------------------------------
local GodModeEnabled = false
 
--------------------------------------------------
-- FOV Circle Drawing
--------------------------------------------------
local FOVCircle = Drawing.new("Circle")
FOVCircle.Filled = false
FOVCircle.Transparency = 0.7
FOVCircle.NumSides = 64
FOVCircle.Thickness = 1.5
 
--------------------------------------------------
-- ESP Drawings Storage (per player)
--------------------------------------------------
local espDrawings = {} -- { [player] = { Box = drawing, Health = drawing } }
local skeletonDrawings = {} -- { [player] = { Lines = {line1, line2, ...} } }
 
--------------------------------------------------
-- Functions for Box ESP
--------------------------------------------------
local function CreateESP(player)
    if espDrawings[player] then return end
    local box = Drawing.new("Square")
    box.Thickness = 2
    box.Color = ESPColor
    box.Filled = false
    box.Visible = false
 
    local healthBar = Drawing.new("Square")
    healthBar.Thickness = 0
    healthBar.Filled = true
    healthBar.Color = Color3.new(0, 1, 0)
    healthBar.Visible = false
 
    espDrawings[player] = { Box = box, Health = healthBar }
end
 
local function RemoveESP(player)
    if espDrawings[player] then
        if espDrawings[player].Box then espDrawings[player].Box:Remove() end
        if espDrawings[player].Health then espDrawings[player].Health:Remove() end
        espDrawings[player] = nil
    end
    if skeletonDrawings[player] then
        for _, line in pairs(skeletonDrawings[player].Lines) do
            if line then line:Remove() end
        end
        skeletonDrawings[player] = nil
    end
end
 
local function UpdateESP()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            CreateESP(player)
            local drawings = espDrawings[player]
            local hrp = player.Character:FindFirstChild("HumanoidRootPart")
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            if hrp and humanoid then
                local rootPos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
                if onScreen then
                    -- Box ESP dimensions: 40x80
                    drawings.Box.Size = Vector2.new(40, 80)
                    drawings.Box.Position = Vector2.new(rootPos.X - 20, rootPos.Y - 40)
                    drawings.Box.Color = ESPColor
                    drawings.Box.Visible = BoxESPEnabled
 
                    -- Health Bar to the left
                    local healthPerc = math.clamp(humanoid.Health / humanoid.MaxHealth, 0, 1)
                    local barHeight = 80 * healthPerc
                    drawings.Health.Size = Vector2.new(4, barHeight)
                    drawings.Health.Position = Vector2.new(drawings.Box.Position.X - 8, drawings.Box.Position.Y + (80 - barHeight))
                    drawings.Health.Color = Color3.fromHSV(healthPerc * 0.33, 1, 1)
                    drawings.Health.Visible = BoxESPEnabled
                else
                    drawings.Box.Visible = false
                    drawings.Health.Visible = false
                end
            end
        else
            RemoveESP(player)
        end
    end
end
 
--------------------------------------------------
-- Functions for Skeleton ESP (Basic Implementation)
--------------------------------------------------
local function CreateSkeletonESP(player)
    if skeletonDrawings[player] then return end
    local lines = {}
    -- We'll attempt to draw lines between key body parts if they exist.
    local parts = {"Head", "Torso", "Left Arm", "Right Arm", "Left Leg", "Right Leg"}
    for i = 1, #parts-1 do
        local line = Drawing.new("Line")
        line.Color = ESPColor
        line.Thickness = 1
        line.Transparency = 1
        line.Visible = false
        table.insert(lines, line)
    end
    skeletonDrawings[player] = { Lines = lines }
end
 
local function UpdateSkeletonESP()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            CreateSkeletonESP(player)
            local sData = skeletonDrawings[player]
            local character = player.Character
            -- تأكد من وجود بعض الأجزاء الرئيسية
            local head = character:FindFirstChild("Head")
            local torso = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
            local larm = character:FindFirstChild("Left Arm") or character:FindFirstChild("LeftUpperArm")
            local rarm = character:FindFirstChild("Right Arm") or character:FindFirstChild("RightUpperArm")
            local lleg = character:FindFirstChild("Left Leg") or character:FindFirstChild("LeftLowerLeg")
            local rleg = character:FindFirstChild("Right Leg") or character:FindFirstChild("RightLowerLeg")
            if head and torso and larm and rarm and lleg and rleg then
                local partsPositions = {
                    Head = Camera:WorldToViewportPoint(head.Position),
                    Torso = Camera:WorldToViewportPoint(torso.Position),
                    LeftArm = Camera:WorldToViewportPoint(larm.Position),
                    RightArm = Camera:WorldToViewportPoint(rarm.Position),
                    LeftLeg = Camera:WorldToViewportPoint(lleg.Position),
                    RightLeg = Camera:WorldToViewportPoint(rleg.Position)
                }
                -- رسم بعض الخطوط (مثلاً من الرأس إلى الجذع، ومن الجذع إلى الأذرع والساقين)
                local lines = sData.Lines
                -- خط من الرأس إلى الجذع
                if partsPositions.Head and partsPositions.Torso then
                    lines[1].From = Vector2.new(partsPositions.Head.X, partsPositions.Head.Y)
                    lines[1].To = Vector2.new(partsPositions.Torso.X, partsPositions.Torso.Y)
                    lines[1].Color = ESPColor
                    lines[1].Visible = SkeletonESPEnabled
                end
                -- خط من الجذع إلى الذراع اليسار
                if partsPositions.Torso and partsPositions.LeftArm then
                    lines[2].From = Vector2.new(partsPositions.Torso.X, partsPositions.Torso.Y)
                    lines[2].To = Vector2.new(partsPositions.LeftArm.X, partsPositions.LeftArm.Y)
                    lines[2].Color = ESPColor
                    lines[2].Visible = SkeletonESPEnabled
                end
                -- خط من الجذع إلى الذراع اليمين
                if partsPositions.Torso and partsPositions.RightArm then
                    lines[3].From = Vector2.new(partsPositions.Torso.X, partsPositions.Torso.Y)
                    lines[3].To = Vector2.new(partsPositions.RightArm.X, partsPositions.RightArm.Y)
                    lines[3].Color = ESPColor
                    lines[3].Visible = SkeletonESPEnabled
                end
                -- خط من الجذع إلى الساق اليسار
                if partsPositions.Torso and partsPositions.LeftLeg then
                    lines[4].From = Vector2.new(partsPositions.Torso.X, partsPositions.Torso.Y)
                    lines[4].To = Vector2.new(partsPositions.LeftLeg.X, partsPositions.LeftLeg.Y)
                    lines[4].Color = ESPColor
                    lines[4].Visible = SkeletonESPEnabled
                end
                -- خط من الجذع إلى الساق اليمين
                if partsPositions.Torso and partsPositions.RightLeg then
                    lines[5].From = Vector2.new(partsPositions.Torso.X, partsPositions.Torso.Y)
                    lines[5].To = Vector2.new(partsPositions.RightLeg.X, partsPositions.RightLeg.Y)
                    lines[5].Color = ESPColor
                    lines[5].Visible = SkeletonESPEnabled
                end
            end
        else
            RemoveESP(player)
        end
    end
end
 
--------------------------------------------------
-- Visibility Check (Raycasting) -- (تم استخدامه أعلاه)
--------------------------------------------------
 
--------------------------------------------------
-- Aim Safe: استخدام Dropdown لاختيار لاعب من القائمة لتجاهله
--------------------------------------------------
local function RefreshSafePlayers()
    local safeList = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            table.insert(safeList, player.Name)
        end
    end
    return safeList
end
 
--------------------------------------------------
-- Function to Get Closest Player for Aimbot (مع الفحص والإستثناء)
--------------------------------------------------
local function GetClosestPlayer()
    local closestDistance = FOV_Radius
    local targetPlayer = nil
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            if TeamCheck and player.Team == LocalPlayer.Team then continue end
            if table.find(safePlayers, player.Name) then continue end  -- تجاهل اللاعبين في Aim Safe
            local aimPart = player.Character:FindFirstChild(AimPart)
            if aimPart then
                local screenPos, onScreen = Camera:WorldToViewportPoint(aimPart.Position)
                local mousePos = UserInputService:GetMouseLocation()
                local distance = (Vector2.new(screenPos.X, screenPos.Y) - mousePos).Magnitude
                if onScreen and distance < closestDistance and (function() 
                    local origin = Camera.CFrame.Position
                    local direction = (aimPart.Position - origin)
                    local params = RaycastParams.new()
                    params.FilterDescendantsInstances = {LocalPlayer.Character}
                    params.FilterType = Enum.RaycastFilterType.Blacklist
                    local res = workspace:Raycast(origin, direction, params)
                    return res and res.Instance and res.Instance:IsDescendantOf(player.Character)
                end)() then
                    closestDistance = distance
                    targetPlayer = player
                end
            end
        end
    end
    return targetPlayer
end
 
--------------------------------------------------
-- Input for Aimbot (Hold right mouse button)
--------------------------------------------------
UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        Holding = true
    end
end)
UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        Holding = false
    end
end)
 
--------------------------------------------------
-- Main RenderStepped Loop
--------------------------------------------------
RunService.RenderStepped:Connect(function()
    -- Update FOV Circle
    FOVCircle.Position = UserInputService:GetMouseLocation()
    FOVCircle.Radius = FOV_Radius
    FOVCircle.Color = FOV_Color
    FOVCircle.Visible = FOV_Visible
 
    -- Update Box ESP if enabled
    if BoxESPEnabled then
        UpdateESP()
    else
        for player, _ in pairs(espDrawings) do
            RemoveESP(player)
        end
    end
 
    -- Update Skeleton ESP if enabled
    if SkeletonESPEnabled then
        UpdateSkeletonESP()
    end
 
    -- Aimbot Logic: إذا كان الضغط على زر الفأرة اليمنى مفعلاً
    if Holding and AimbotEnabled then
        local target = GetClosestPlayer()
        if target and target.Character and target.Character:FindFirstChild(AimPart) then
            local targetPart = target.Character[AimPart]
            TweenService:Create(Camera, TweenInfo.new(Sensitivity), {CFrame = CFrame.new(Camera.CFrame.Position, targetPart.Position)}):Play()
        end
    end
 
    -- تأمين السرعة: عدم تجاوز سرعة اللاعب الحد المكتشف
    if LockSpeedEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        local currentSpeed = LocalPlayer.Character.Humanoid.WalkSpeed
        if currentSpeed > MapSpeedLimit then
            LocalPlayer.Character.Humanoid.WalkSpeed = MapSpeedLimit
        end
    end
 
    -- God Mode: إعادة ضبط الصحة إلى الحد الأقصى إذا كان مفعل
    if GodModeEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.Health = LocalPlayer.Character.Humanoid.MaxHealth
    end
end)
 
--------------------------------------------------
-- ESP Tab Controls
--------------------------------------------------
ESPSection:NewToggle("Box ESP", "Enable/Disable Box ESP", function(state)
    BoxESPEnabled = state
end)
ESPSection:NewToggle("Skeleton ESP", "Enable/Disable Skeleton ESP", function(state)
    SkeletonESPEnabled = state
    -- عند التفعيل يتم إنشاء الرسومات لكل لاعب
    if SkeletonESPEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                CreateESP(player)
                CreateSkeletonESP(player)
            end
        end
    else
        for player, _ in pairs(skeletonDrawings) do
            if skeletonDrawings[player] then
                for _, line in pairs(skeletonDrawings[player].Lines) do
                    if line then line:Remove() end
                end
                skeletonDrawings[player] = nil
            end
        end
    end
end)
ESPSection:NewColorPicker("ESP Color", "Change ESP Color", ESPColor, function(color)
    ESPColor = color
end)
 
--------------------------------------------------
-- Aim Tab Controls
--------------------------------------------------
AimSection:NewToggle("Aimbot", "Enable/Disable Aimbot", function(state)
    AimbotEnabled = state
end)
AimSection:NewToggle("Team Check", "Only aim at enemies", function(state)
    TeamCheck = state
end)
AimSection:NewSlider("FOV Size", "Adjust FOV size", 50, 500, function(value)
    FOV_Radius = value
end)
AimSection:NewDropdown("Aim Part", "Choose target body part", {"Head", "Torso", "Leg"}, function(selected)
    AimPart = selected
end)
AimSection:NewToggle("Show FOV", "Enable/Disable FOV circle", function(state)
    FOV_Visible = state
end)
AimSection:NewSlider("Aimbot Sensitivity", "Adjust Aimbot speed", 0.05, 1, function(value)
    Sensitivity = value
end)
AimSection:NewColorPicker("FOV Color", "Change FOV Circle Color", FOV_Color, function(color)
    FOV_Color = color
end)
-- Aim Safe: استخدام Dropdown لتحديد لاعب من قائمة اللاعبين وإضافته إلى القائمة
AimSection:NewDropdown("Select Safe Player", "Choose a player to ignore", RefreshSafePlayers(), function(selected)
    if not table.find(safePlayers, selected) then
        table.insert(safePlayers, selected)
        print("Added to Aim Safe: " .. selected)
    end
end)
AimSection:NewButton("Clear Aim Safe", "Clear list of safe players", function()
    safePlayers = {}
    print("Aim Safe list cleared")
end)
 
--------------------------------------------------
-- Security Tab Controls
--------------------------------------------------
SecuritySection:NewButton("What IS The Speed Limit In This Map", "Detects max WalkSpeed in the map", function()
    local detectedSpeed = 0
    for _, player in pairs(Players:GetPlayers()) do
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            local speed = player.Character.Humanoid.WalkSpeed
            if speed > detectedSpeed then
                detectedSpeed = speed
            end
        end
    end
    if detectedSpeed > 0 then
        MapSpeedLimit = detectedSpeed
        StarterGui:SetCore("SendNotification", {
            Title = "SPEED LIMIT DETECTED",
            Text = "THE SPEED LIMIT IS: " .. MapSpeedLimit,
            Duration = 5
        })
    else
        StarterGui:SetCore("SendNotification", {
            Title = "SPEED LIMIT DETECTED",
            Text = "Could not detect speed limit; using default (" .. MapSpeedLimit .. ")",
            Duration = 5
        })
    end
end)
SecuritySection:NewToggle("Lock Speed", "Prevents your speed from exceeding the map limit", function(state)
    LockSpeedEnabled = state
end)
SecuritySection:NewSlider("Set Player Speed", "Set your speed (1 to detected limit)", 1, MapSpeedLimit, function(value)
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        value = math.clamp(value, 1, MapSpeedLimit)
        LocalPlayer.Character.Humanoid.WalkSpeed = value
    end
end)
-- God Mode Toggle
SecuritySection:NewToggle("God Mode", "Enable/Disable God Mode", function(state)
    GodModeEnabled = state
end)
-- Rehealth Button
SecuritySection:NewButton("Rehealth", "Restore your health to maximum", function()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.Health = LocalPlayer.Character.Humanoid.MaxHealth
    end
end)
-- Anti-Teleport System Check
SecuritySection:NewButton("Is There Anti-Teleport System", "Checks if an anti-teleport system is active", function()
    if workspace:FindFirstChild("AntiTeleport") then
        StarterGui:SetCore("SendNotification", {
            Title = "ANTI-TELEPORT SYSTEM",
            Text = "There is an Anti-Teleport System active!",
            Duration = 5
        })
    else
        StarterGui:SetCore("SendNotification", {
            Title = "ANTI-TELEPORT SYSTEM",
            Text = "No Anti-Teleport System detected.",
            Duration = 5
        })
    end
end)
-- Teleport target selection and action
local teleportTarget = nil
SecuritySection:NewDropdown("Select Teleport Target", "Choose a player to teleport to", (function()
    local names = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            table.insert(names, player.Name)
        end
    end
    return names
end)(), function(selected)
    teleportTarget = selected
    print("Teleport target set to: " .. selected)
end)
SecuritySection:NewButton("Teleport To Player", "Teleport to selected player", function()
    if teleportTarget then
        local targetPlayer = Players:FindFirstChild(teleportTarget)
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            if workspace:FindFirstChild("AntiTeleport") then
                StarterGui:SetCore("SendNotification", {
                    Title = "ANTI-TELEPORT ALERT",
                    Text = "Cannot teleport! Anti-Teleport System is active!",
                    Duration = 5
                })
            else
                LocalPlayer.Character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
            end
        else
            warn("Teleport target invalid or not available.")
        end
    else
        warn("No teleport target selected.")
    end
end)
 
--------------------------------------------------
-- About Me Tab Controls
--------------------------------------------------
-- Ø§Ù„Ø­ØµÙˆÙ„ Ø¹Ù„Ù‰ Ù…Ø¹Ù„ÙˆÙ…Ø§Øª Ø§Ù„Ù„Ø¹Ø¨Ø© Ø§Ù„Ø­Ø§Ù„ÙŠØ©
local success, gameInfo = pcall(function()
    return MarketplaceService:GetProductInfo(game.PlaceId)
end)
local gameName = success and gameInfo.Name or "Unknown Game"
local thumbType = Enum.ThumbnailType.HeadShot
local thumbSize = Enum.ThumbnailSize.Size100x100
local avatarUrl = Players:GetUserThumbnailAsync(LocalPlayer.UserId, thumbType, thumbSize)
 
AboutSection:NewLabel("Player Name: " .. LocalPlayer.Name)
AboutSection:NewLabel("Roblox UserId: " .. LocalPlayer.UserId)
AboutSection:NewLabel("Display Name: " .. LocalPlayer.DisplayName)
AboutSection:NewLabel("Game Playing: " .. gameName)
AboutSection:NewLabel("Avatar URL: " .. avatarUrl)
AboutSection:NewLabel("Account Age (days): " .. tostring(LocalPlayer.AccountAge))
